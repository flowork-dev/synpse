{
    "log_startup_phase1": "StartupService (Phase 1): Running automatic file update check...",
    "log_startup_phase2": "StartupService (Phase 2): Running Benteng Baja file integrity check...",
    "log_startup_phase3": "StartupService (Phase 3): Remote License Verification...",
    "log_startup_inject_rules": "StartupService: Injecting remote rules into PermissionManager...",
    "log_startup_phase4": "StartupService (Phase 4): All checks passed. Starting normal services...",
    "log_startup_skip_service": "StartupService: Skipped loading/starting '{service_id}' due to license restrictions.",
    "log_startup_service_error": "StartupService: An error occurred with service '{service_id}': {error}",
    "log_startup_all_services_started": "StartupService: All services started successfully.",
    "log_startup_critical_error": "A critical, unrecoverable error occurred during startup: {error}",
    "log_startup_check_session": "StartupService: Checking for saved user session...",
    "log_startup_no_statemanager": "StartupService: StateManager not available for auto-login.",
    "log_startup_no_token": "StartupService: No saved session token found.",
    "log_startup_validate_token": "StartupService: Found session token, attempting to validate with server...",
    "log_startup_autologin_ok": "Auto-login successful for user: {email}",
    "log_startup_autologin_fail": "Auto-login failed: Token is invalid or expired. Reason: {reason}",
    "log_integrity_dev_mode": "Benteng Baja: DEVELOPMENT MODE ACTIVE. Skipping all file integrity checks.",
    "log_integrity_start_verify": "Benteng Baja: Verifying file integrity (Two-Layer Check)...",
    "log_integrity_core_manifest_missing": "Benteng Baja FAILED: Core integrity manifest 'core_integrity.json' not found. Application cannot run securely.",
    "log_integrity_core_loaded": "Benteng Baja: Loaded {count} core engine file hashes.",
    "log_integrity_addon_loaded": "Benteng Baja: Loaded {count} addon file hashes.",
    "log_integrity_addon_fail": "Benteng Baja: Could not load addon_integrity.json: {error}",
    "log_integrity_file_missing": "Integrity Check Failed: Core file '{file}' is missing from disk but listed in the manifest.",
    "log_integrity_file_modified": "Integrity Check Failed: Core file '{file}' has been modified or is corrupt.",
    "log_integrity_all_ok": "Benteng Baja: All {count} registered files passed integrity check.",
    "log_kernel_proxy_reload": "Proxy '{service_id}': Hot reload triggered.",
    "log_kernel_component_not_found": "Kernel.get_component_instance could not find any component with ID '{component_id}' in any manager.",
    "log_kernel_early_license_check": "Kernel: Running early license verification...",
    "log_kernel_tier_confirmed": "Kernel: License tier confirmed as '{tier}' before loading premium services.",
    "log_kernel_hot_reload_start": "HOT RELOAD: A component change was detected. Reloading all components...",
    "log_kernel_hot_reload_finish": "HOT RELOAD: Component reload process finished.",
    "log_kernel_approval_event": "Event published for manual approval from module '{module_id}'. Message: {message}",
    "log_kernel_no_eventbus_approval": "EventBus not available. Cannot forward approval request.",
    "log_kernel_permission_denied": "PERMISSION DENIED: {message}",
    "log_kernel_no_eventbus_permission": "EventBus not available. Cannot notify about permission denial.",
    "log_exec_global_error_trigger": "GLOBAL ERROR HANDLER: Triggering preset '{preset}'...",
    "log_exec_global_error_no_preset_manager": "GLOBAL ERROR HANDLER: Failed, PresetManager service not available.",
    "log_exec_global_error_preset_not_found": "GLOBAL ERROR HANDLER: Failed, preset '{preset}' not found.",
    "log_exec_global_error_complete": "GLOBAL ERROR HANDLER: Execution of preset '{preset}' completed.",
    "log_exec_global_error_fail_self": "GLOBAL ERROR HANDLER: An error occurred while EXECUTING the error handler itself: {error}",
    "log_exec_clear_history": "Cleared previous run history for context: {context_id}",
    "log_exec_sim_start": "===== STARTING SIMULATION MODE =====",
    "log_exec_no_nodes": "Execution failed: No nodes to execute.",
    "log_exec_checkpoint_found": "CHECKPOINT FOUND: Resuming workflow from state after '{node_name}'.",
    "log_exec_start_from_node": "Service call: Starting workflow execution from specific node '{node_name}'.",
    "log_exec_no_start_node": "Execution failed: No start node found.",
    "log_exec_permission_denied": "!!! PERMISSION DENIED IN WORKFLOW: {error}",
    "log_exec_fatal_error": "!!! FATAL ERROR IN WORKFLOW EXECUTOR: {error}",
    "log_exec_sim_finish": "===== SIMULATION FINISHED =====",
    "log_exec_on_complete": "Workflow 'on_complete' hook triggered.",
    "log_exec_dispatch_analysis": "Executor: Attempting to dispatch analysis request for context '{context_id}'",
    "log_exec_copilot_skip_tier": "AI Co-pilot analysis skipped due to license tier.",
    "log_exec_stop_received": "STOP request received.",
    "log_exec_node_failed_check_port": "Node '{node_name}' failed. Checking for 'error' port connection.",
    "log_exec_path_halted": "Execution path halted. Node '{node_name}' has multiple output ports but did not specify which one to take.",
    "log_exec_path_finished": "Execution path finished. Node '{node_name}' has no outgoing connections from port '{port_name}'.",
    "log_exec_executing_node": "INFO: Executing node '{node_name}' (Module: {module_id})",
    "log_exec_node_error": "ERROR: An error occurred while executing node '{node_name}': {error}",
    "log_startup_async_server": "ApiServer: Now running on a high-performance asynchronous core (AIOHTTP).",
    "...": "...(semua key yang sudah ada tetap di sini)...",
    "log_kernel_lazy_load_service": "LAZY LOAD: Instantiating service '{service_id}' for the first time.",
    "ai_trainer_tab_datasets": "1. Dataset Management",
    "ai_trainer_tab_training": "2. Model Training",
    "ai_trainer_tab_monitor": "3. Training Monitor",
    "ai_trainer_training_title": "Start a New Training Job",
    "ai_trainer_base_model_label": "Base Model",
    "ai_trainer_dataset_label": "Training Dataset",
    "ai_trainer_new_model_name_label": "New Model Name",
    "ai_trainer_new_model_name_hint": "A unique name for your fine-tuned model (e.g., 'my-customer-service-bot').",
    "ai_trainer_epochs_label": "Epochs",
    "ai_trainer_batch_size_label": "Batch Size",
    "ai_trainer_start_btn": "Start Training",
    "ai_trainer_monitor_empty_title": "No Training Jobs",
    "ai_trainer_monitor_empty_subtitle": "Start a new training job from the 'Model Training' tab to monitor its progress here.",
    "plan_cta_current": "Current Plan",
    "plan_cta_downgrade": "Downgrade",
    "plan_cta_upgrade": "Upgrade to {tier}",
    "pricing_title": "Find the Plan That Matches Your Ambition",
    "pricing_subtitle": "Start for free, upgrade as you grow. No risks.",
    "settings_title": "Settings",
    "settings_section_account": "Account & License",
    "settings_section_cloud_sync": "Cloud Sync",
    "settings_section_general": "General",
    "settings_section_ai": "AI Models",
    "settings_section_server": "Server & API",
    "settings_section_advanced": "Advanced",
    "settings_general_language_label": "Display Language",
    "settings_general_language_hint": "Choose the interface language for the application.",
    "settings_general_theme_label": "Display Theme",
    "settings_general_theme_hint": "Select the visual theme for the entire application.",
    "settings_general_recorder_path_label": "Recorder Save Folder",
    "settings_general_recorder_path_hint": "The location to save screen recording videos.",
    "engines_title": "My Engines Management",
    "engines_description": "Engines are your personal 'workers' that execute workflows. You can install them on your local PC, laptop, or private server (VPS) for secure and private execution.",
    "about_main_title": "About Flowork",
    "about_vision_p1": "Our vision is to empower individuals and teams to transform even the most complex ideas into intelligent, automated systems that work for them, without limits.",
    "about_vision_p2": "We believe in the power of privacy and full data control, which is why we built Flowork with a unique hybrid architecture: design in the cloud, execute on your servers.",
    "about_team_title": "Our Core Team",
    "about_team_intro": "We are a group of developers, designers, and dreamers passionate about automation and AI.",
    "about_team_role_architect": "Architect & Lead Developer",
    "about_team_quote_awenk": "Let's build something amazing.",
    "about_team_role_plugin": "Plugin Architecture Specialist",
    "about_team_quote_imam": "Every plugin is a door to new possibilities.",
    "about_team_role_module": "Module & Tool Developer",
    "about_team_quote_irzad": "Good functions are the foundation of automation.",
    "about_team_role_widget": "Widget & UI Specialist",
    "about_team_quote_teguh": "Interfaces should empower, not limit.",
    "about_thanks_title": "Special Thanks",
    "about_thanks_intro": "Flowork would not exist without the foundation built by giants in the open-source world."
}